{"ast":null,"code":"var _jsxFileName = \"/Users/fabiomonteiromatos/projetos/workspaces/ws-devsuperior/projeto-sds5/frontend/src/components/DonutChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  const [ChartData, setChartData] = React.useState({\n    labels: [],\n    series: []\n  }); //forma errada de fazer\n\n  axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n    const data = response.data;\n    const myLabels = data.map(x => x.sellerName);\n    const mySeries = data.map(x => x.sum);\n    setChartData({\n      labels: myLabels,\n      series: mySeries\n    });\n    console.log(ChartData);\n  });\n  /* \n              const mockData = {\n          series: [477138, 499928, 444867, 220426, 473088],\n          labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n      } */\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: ChartData.labels\n    },\n    series: ChartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DonutChart, \"NqK1pe+a2kcy/lTFOwKylr6Kibc=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["/Users/fabiomonteiromatos/projetos/workspaces/ws-devsuperior/projeto-sds5/frontend/src/components/DonutChart/index.tsx"],"names":["axios","React","Chart","BASE_URL","DonutChart","ChartData","setChartData","useState","labels","series","get","then","response","data","myLabels","map","x","sellerName","mySeries","sum","console","log","options","legend","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AASA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAA0B;AAACC,IAAAA,MAAM,EAAC,EAAR;AAAYC,IAAAA,MAAM,EAAC;AAAnB,GAA1B,CAAlC,CADqB,CAEzB;;AAEQT,EAAAA,KAAK,CAACU,GAAN,CAAW,GAAEP,QAAS,yBAAtB,EACCQ,IADD,CACMC,QAAQ,IAAI;AAEd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AAEAb,IAAAA,YAAY,CAAC;AAAGE,MAAAA,MAAM,EAAEM,QAAX;AAAqBL,MAAAA,MAAM,EAAES;AAA7B,KAAD,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AAEH,GAVD;AAWR;AACA;AACA;AACA;AACA;;AAEI,QAAMiB,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAQF,sBAEA,QAAC,KAAD;AAEA,IAAA,OAAO,EAAE,EAAC,GAAGF,OAAJ;AAAYd,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAA9B,KAFT;AAGA,IAAA,MAAM,EAAEH,SAAS,CAACI,MAHlB;AAIA,IAAA,IAAI,EAAC,OAJL;AAKA,IAAA,MAAM,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,UAFA;AAWD,CAxCD;;GAAML,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSum } from 'types/sale';\nimport { BASE_URL } from 'utils/requests';\n\n\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\nconst DonutChart = () => {\n    const [ChartData, setChartData] = React.useState<ChartData>({labels:[], series:[]} );\n//forma errada de fazer\n\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\n        .then(response => {\n\n            const data = response.data as SaleSum[];\n            const myLabels = data.map(x => x.sellerName);\n            const mySeries = data.map(x => x.sum); \n              \n            setChartData({  labels: myLabels, series: mySeries }); \n            console.log(ChartData);\n\n        });\n/* \n            const mockData = {\n        series: [477138, 499928, 444867, 220426, 473088],\n        labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n    } */\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n  \n\n\n  return (\n  \n  <Chart \n  \n  options={{...options,labels: ChartData.labels}}\n  series={ChartData.series}\n  type=\"donut\"\n  height=\"240\"\n  />\n\n  );\n}\n\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}